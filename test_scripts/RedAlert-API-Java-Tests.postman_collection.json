{
    "info": {
        "name": "RedAlert - API Java Tests",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "1.1 - Registrar Usuário A",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/auth/register",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "auth",
                        "register"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"nome\": \"Usuário Beta\",\n  \"email\": \"beta@example.com\",\n  \"senha\": \"PasswordBeta123!\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201 Created\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "pm.test(\"Response body contains user ID, nome, email\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.id).to.be.a('number');",
                            "    pm.expect(jsonData.nome).to.eql(\"Usuário Beta\");",
                            "    pm.expect(jsonData.email).to.eql(\"beta@example.com\");",
                            "    pm.environment.set(\"USER_A_ID\", jsonData.id);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "1.2 - Login Usuário A",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/auth/login",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "auth",
                        "login"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"beta@example.com\",\n  \"senha\": \"PasswordBeta123!\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response body contains JWT token\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.token).to.be.a('string');",
                            "    pm.environment.set(\"USER_A_TOKEN\", jsonData.token);",
                            "    if(jsonData.userId) { pm.environment.set(\"USER_A_ID\", jsonData.userId); }",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "1.3 - Consultar Perfil Usuário A (/users/me)",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{USER_A_TOKEN}}"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/users/me",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "users",
                        "me"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response body contains correct user details\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"USER_A_ID\")));",
                            "    pm.expect(jsonData.email).to.eql(\"beta@example.com\");",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "1.4 - Atualizar Email Usuário A (/users/me)",
            "request": {
                "method": "PUT",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{USER_A_TOKEN}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/users/me",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "users",
                        "me"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"beta.novo@example.com\",\n  \"nome\": \"Beta Modificado\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response indicates successful update\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.message).to.eql(\"Perfil atualizado com sucesso.\");",
                            "    pm.expect(jsonData.email).to.eql(\"beta.novo@example.com\");",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
         {
            "name": "1.4.1 - Novo Login Usuário A",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/auth/login",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "auth",
                        "login"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"beta.novo@example.com\",\n  \"senha\": \"PasswordBeta123!\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response body contains JWT token\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.token).to.be.a('string');",
                            "    pm.environment.set(\"USER_A_TOKEN\", jsonData.token);",
                            "    if(jsonData.userId) { pm.environment.set(\"USER_A_ID\", jsonData.userId); }",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "1.5 - Deletar Usuário A (/users/me)",
            "request": {
                "method": "DELETE",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{USER_A_TOKEN}}"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/users/me",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "users",
                        "me"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 204 No Content\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "pm.environment.unset(\"USER_A_TOKEN\");",
                            "pm.environment.unset(\"USER_A_ID\");"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "2.1 - Registrar Usuário B",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/auth/register",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "auth",
                        "register"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"nome\": \"Usuário Gamma\",\n  \"email\": \"gamma@example.com\",\n  \"senha\": \"PasswordGamma456!\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201 Created\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "var jsonData = pm.response.json();",
                            "pm.environment.set(\"USER_B_ID\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "2.2 - Login Usuário B",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/auth/login",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "auth",
                        "login"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"gamma@example.com\",\n  \"senha\": \"PasswordGamma456!\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "var jsonData = pm.response.json();",
                            "pm.expect(jsonData.token).to.be.a('string');",
                            "pm.environment.set(\"USER_B_TOKEN\", jsonData.token);",
                            "if(jsonData.userId) { pm.environment.set(\"USER_B_ID\", jsonData.userId); }"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "3.1 - Postar Alerta (Usuário B)",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{USER_B_TOKEN}}"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/alerts",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "alerts"
                    ]
                },
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"descricaoTexto\": \"Alagamento na Avenida Central, carros com dificuldade de passar. Água subindo.\",\n  \"latitude\": -23.550000,\n  \"longitude\": -46.630000,\n  \"timestampCliente\": \"2025-06-05T10:00:00Z\"\n}"
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201 Created\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "var jsonData = pm.response.json();",
                            "pm.expect(jsonData.alertId).to.be.a('number');",
                            "pm.environment.set(\"ALERT_ID\", jsonData.alertId);",
                            "pm.expect(jsonData.statusAlerta).to.eql(\"CLASSIFICADO_IA\");",
                            "pm.expect(jsonData.tipoIA).to.be.a('string');",
                            "pm.expect(jsonData.severidadeIA).to.be.a('string');"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "3.2 - Listar Alertas (Paginado)",
            "request": {
                "method": "GET",
                "header": [
                     {
                        "key": "Authorization",
                        "value": "Bearer {{USER_B_TOKEN}}"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/alerts?page=0&size=5&sort=timestampReporte,desc",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "alerts"
                    ],
                    "query": [
                        {"key": "page", "value": "0"},
                        {"key": "size", "value": "5"},
                        {"key": "sort", "value": "timestampReporte,desc"}
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response is paginated and contains alerts\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.content).to.be.an('array');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "4.1 - Get Map Data",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{USER_B_TOKEN}}"
                    }
                ],
                "url": {
                    "raw": "{{BASE_URL}}/mapdata?currentLat=-23.550000&currentLon=-46.630000&radiusKm=5",
                    "host": [
                        "{{BASE_URL}}"
                    ],
                    "path": [
                        "mapdata"
                    ],
                    "query": [
                        {"key": "currentLat", "value": "-23.550000"},
                        {"key": "currentLon", "value": "-46.630000"},
                        {"key": "radiusKm", "value": "5"}
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Response contains queryArea, hotspots, and publicAlerts\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.queryArea).to.be.an('object');",
                            "    pm.expect(jsonData.hotspots).to.be.an('array');",
                            "    pm.expect(jsonData.publicAlerts).to.be.an('array');",
                            "    if (jsonData.hotspots.length > 0) {",
                            "        console.log('Hotspots retornados:', jsonData.hotspots.length);",
                            "    } else {",
                            "        console.warn('Nenhum hotspot retornado. Job de clustering pode não ter rodado ainda ou não formou clusters para os alertas enviados.');",
                            "    }",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "BASE_URL",
            "value": "http://localhost:8074"
        },
        {
            "key": "USER_A_ID",
            "value": ""
        },
        {
            "key": "USER_A_TOKEN",
            "value": ""
        },
         {
            "key": "USER_B_ID",
            "value": ""
        },
        {
            "key": "USER_B_TOKEN",
            "value": ""
        },
        {
            "key": "ALERT_ID",
            "value": ""
        }
    ]
}
